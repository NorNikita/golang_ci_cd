stages:
  - checks
  - build
  - test
  - deploy

linters:
  image: golangci/golangci-lint:latest
  stage: checks
  script:
    - make lint

build:
  image: golang:1.14.0
  stage: build
  script:
    - echo "Try build project"
    - make build

test:
  image: golang:1.14.0
  stage: test
  script:
    - make test

.prepare_ssh:
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - echo $SSH_PRIVATE_KEY | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -t rsa 5.188.142.225 >> ~/.ssh/known_hosts
    - docker login --username nikita1996 --password $DOCKER_TOKEN

deploy:
  variables:
    DOCKER_TLS_CERTDIR: ''
  extends: .prepare_ssh
  image: docker
  services:
    - docker:dind
  stage: deploy
  script:
    - docker build nikita1996/ci_cd_homework:latest
    - docker push nikita1996/ci_cd_homework:latest
    - ssh ubuntu@5.188.142.225 'docker stop my_app || echo 1'
    - ssh ubuntu@5.188.142.225 'docker rm my_app || echo 1'
    - ssh ubuntu@5.188.142.225 'docker run --rm -d -p 8080:8080 --name=my_app nikita1996/ci_cd_homework:latest'
  only:
    - master